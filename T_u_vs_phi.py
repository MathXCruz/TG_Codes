'''  This code is used to calculate and plot the laminar burning speed of a flame
 generated by the reaction on line 21 over the phi range of line 18, using the
 mechanism on line 25.'''

import time
import cantera as ct
import matplotlib.pyplot as plt
import numpy as np

start_time = time.time()
# Simulation Parameters
Tin = 298.0
P = ct.one_atm
Temp= []
A = []
St = []

a = np.arange(0.7, 1.9, 0.8)
for c in a:
    b = str(c)
    reactants = 'C3H8:' +b+ ', O2:5.0, N2: 18.8'
    
# Ideal Gas and mixture object used to calculate mixture properties

    gas = ct.Solution('sandiego16.cti')
    gas.TPX = Tin, P, reactants

    # Flame Object
    f = ct.FreeFlame(gas, width=0.03)
    f.transport_model = 'Multi'
    f.set_refine_criteria(ratio=3, slope=0.07,curve=0.14)
    f.energy_enabled = True
    f.radiation_enabled = True
    f.soret_enabled = True


    f.solve(loglevel=1, refine_grid=True, auto=False)
    Temp.append(f.T[-1])
    St.append(f.velocity[0]*100)
    A.append(c)
    
fig, ax1 = plt.subplots()

plt.xlim(a[0], a[-1])
#plt.ylim()
color = 'tab:red'
ax1.set_xlabel('phi')
ax1.set_ylabel('T [K]', color=color)
plt.title('Adiabatic Flame Temperature & Laminar Flame Speed: C3H8 + Air')
ax1.plot(A,Temp, color=color)
ax1.tick_params(axis='y', labelcolor=color)

ax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis

color = 'tab:blue'
ax2.set_ylabel('S_t [cm/s]', color=color)  # we already handled the x-label with ax1
ax2.plot(A, St, color=color)
ax2.tick_params(axis='y', labelcolor=color)

fig.tight_layout()    
    
plt.show()
print("--- %s seconds ---" % (time.time() - start_time))
